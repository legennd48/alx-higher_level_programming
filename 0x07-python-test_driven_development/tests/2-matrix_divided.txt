================
2-matrix_divided
================

This module is the the unit test for the matrix_divided function.
it divides all elements of a matrix

================

First we import the function
::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

=============
Success Cases
=============

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [6, 4, 5],
    ...     [7, 8, 9]
    ... ]
    >>> matrix_divided(matrix, 4)
    [[0.25, 0.5, 0.75], [1.5, 1.0, 1.25], [1.75, 2.0, 2.25]]

It also works with the main matrix

::

    >>> matrix = [
    ...     [2, 4, 6],
    ...     [12, 24, 48]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.67, 1.33, 2.0], [4.0, 8.0, 16.0]]

Test matrix with mixed float and int

::

    >>> matrix = [
    ...     [2, 4, 6],
    ...     [2.4, 3.7, 25.4]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.67, 1.33, 2.0], [0.8, 1.23, 8.47]]

Test matrix with pure floats

::
    >>> matrix = [
    ...     [5.2, 6.3, 8.4],
    ...     [1.2, 2.3, 3.4]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[1.73, 2.1, 2.8], [0.4, 0.77, 1.13]]

Causes TypeError when matrix is not a list

::

    >>> matrix = "string instead of list"
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

causes TypeError when matrix is empty or None

::

    >>> matrix = None
    >>> print(matrix_divided(matrix, 9))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 8))
    [[]]

Causes TypeError when one of the elements is not an integer or a float

::

    >>> matrix = [
    ...     [1, 2, "string"],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

TypeError also when divisior is neither integer nor a float

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "text"))
    Traceback (most recent call last):
    TypeError: div must be a number

Also Causes TypeError the divisior has a None value

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

TypeError the divisior is not an integer or a float

::
Also causes TypeError when matrix is an empty list, unbalanced list of lists or
an ordinary list

::

    >>> matrix = []
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


::

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size


::


    >>> matrix = [1, 3, 5]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
